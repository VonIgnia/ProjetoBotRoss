def APS2AndreGiBarros():
  set_tcp(p[0.0,0.0,0.18,0.0,3.14,0.0])
  set_payload(0.71, [2.6000000000000003E-4, 0.00206, 0.0423])
  modbus_add_signal("10.103.16.140", 255, 0, 2, "prod_na_cx", True)
  modbus_set_signal_update_frequency("prod_na_cx", 10)
  modbus_add_signal("10.103.16.140", 255, 1, 2, "n_insp", True)
  modbus_set_signal_update_frequency("n_insp", 10)
  modbus_add_signal("10.103.16.140", 255, 0, 3, "prod_encaixota", True)
  modbus_set_signal_update_frequency("prod_encaixota", 10)
  modbus_set_runstate_dependent_choice("prod_encaixota",0)
  set_gravity([0.0, 0.0, 9.82])
  set_safety_mode_transition_hardness(0)
  set_tool_voltage(24)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 0)
  set_tool_analog_input_domain(1, 0)
  set_analog_outputdomain(0, 1)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  step_count_197c2427_ff55_4f27_9c50_3f9f14909725 = 0.0
  thread Step_Counter_Thread_7fefdadb_2fcb_436e_bae9_8e8e3a1fb56a():
    while (True):
      step_count_197c2427_ff55_4f27_9c50_3f9f14909725 = step_count_197c2427_ff55_4f27_9c50_3f9f14909725 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_7fefdadb_2fcb_436e_bae9_8e8e3a1fb56a()
  global plane=[0, 0, 0, 0, 0, 0]
  global free=1
  global Gaveteiro_plane=p[-0.18391406007170819,-0.6890912013208738,-0.3091053148893457,-3.136624244641354,-0.07450754164245207,-0.012062489851684073]
  global Plane_var=p[0.0455072287759728,0.5532633607914713,-0.12009520789912541,0.02088120484419274,0.010016746118093,-0.02458726325044075]
  global PlanoArAula9=p[0.7942382577522773,-0.05274490106868765,0.28953087333027294,-1.2101977474418126,-1.2112243285351472,1.2072853144995164]
  global PlanoMesaAula9=p[0.4316603038800538,-0.4176154966413232,-0.22708615915239258,0.0011409468517281232,-0.0021558803218785405,-3.3834622272085614E-4]
  global Plano_mesa_gio=p[0.5722610509435332,-0.40820095277647794,-0.22787514661355984,0.004980319709535583,-0.010045557410892312,0.003475544605146006]
  global xadrez=p[0.07245008429201542,0.7162309814300137,-0.2492325678677777,0.021240702277102536,0.009909632298596038,-2.9870755951116497]
  global xadrez2=p[-0.24762135118614845,0.3378039779312413,-0.2536888643835707,0.03547999981100722,-0.008259935265332035,0.09585250855875074]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  def Place():
    $ 31 "Place" "noBreak"
    $ 32 "Set open=On"
    set_tool_digital_out(1, True)
    $ 33 "Set close=Off"
    set_tool_digital_out(0, False)
    $ 34 "Wait: 0.5"
    sleep(0.5)
  end
  def Pick():
    $ 35 "Pick" "noBreak"
    $ 36 "Set open=Off"
    set_tool_digital_out(1, False)
    $ 37 "Set close=On"
    set_tool_digital_out(0, True)
    $ 38 "Wait: 0.5"
    sleep(0.5)
  end
  while (True):
    $ 1 "Robot Program"
    $ 2 "produtos_caixa≔0"
    global produtos_caixa=0
    $ 3 "var_loop≔0"
    global var_loop=0
    $ 4 "encaixotados≔0"
    global encaixotados=0
    $ 5 "Loop"
    while (True):
      $ 6 "Loop var_loop<prod_na_cx"
      while (var_loop<modbus_get_signal_status("prod_na_cx")):
        $ 7 "Wait DI[0]=HI"
        while (get_standard_digital_in(0) == False):
          sync()
        end
        $ 8 "MoveJ"
        $ 9 "Waypoint_1" "breakAfter"
        movej(get_inverse_kin(p[.529086998387, .095351975690, -.082528950245, .035761651478, -.036185924809, -.039359517803], qnear=[-3.1908043066607874, -1.1579797903644007, 2.0352001190185547, -2.481266800557272, -1.5268014113055628, 1.5741568803787231]), a=1.3962634015954636, v=1.0471975511965976)
        $ 10 "Call Pick"
        Pick()
        $ 11 "produtos_caixa≔produtos_caixa+1"
        global produtos_caixa=produtos_caixa+1
        $ 12 "If produtos_caixa≥n_insp"
        if (produtos_caixa >= modbus_get_signal_status("n_insp")):
          $ 13 "MoveJ"
          $ 14 "Waypoint_4" "breakAfter"
          movej(get_inverse_kin(p[-.677610942936, -.163569628848, -.088987443941, -.050921594828, .055351209172, -3.043432532504], qnear=[-6.193059440945284, -0.8594687620746058, 1.5181446075439453, -2.258611504231588, -1.5991876761065882, 1.5742766857147217]), a=1.3962634015954636, v=1.0471975511965976)
          $ 15 "Set M_e=On"
          set_standard_digital_out(2, True)
          $ 16 "Wait: 0.5"
          sleep(0.5)
          $ 17 "Set M_e=Off"
          set_standard_digital_out(2, False)
          $ 18 "Popup: Fim da inspecao"
          popup("Fim da inspecao", "Message", False, False, blocking=True)
          $ 19 "produtos_caixa≔0"
          global produtos_caixa=0
        end
        $ 20 "Wait DI[1]=HI"
        while (get_standard_digital_in(1) == False):
          sync()
        end
        $ 21 "MoveJ"
        $ 22 "Waypoint_3" "breakAfter"
        movej(get_inverse_kin(p[.179272509713, .571600061334, .043879992842, -.003072421920, -.012072618061, .203021988278], qnear=[-2.056817356740133, -1.2193239370929163, 1.6999249458312988, -2.0536792914019983, -1.5698626677142542, 2.461045026779175]), a=1.3962634015954636, v=1.0471975511965976)
        $ 23 "Call Place"
        Place()
        $ 24 "var_loop≔var_loop+1"
        global var_loop=var_loop+1
        $ 25 "encaixotados≔encaixotados+1"
        global encaixotados=encaixotados+1
        $ 26 "Set prod_encaixota=encaixotados"
        modbus_set_output_register("prod_encaixota", encaixotados)
      end
      $ 27 "Set L_e=On"
      set_standard_digital_out(1, True)
      $ 28 "Wait: 0.5"
      sleep(0.5)
      $ 29 "Set L_e=Off"
      set_standard_digital_out(1, False)
      $ 30 "var_loop≔0"
      global var_loop=0
    end
  end
end
