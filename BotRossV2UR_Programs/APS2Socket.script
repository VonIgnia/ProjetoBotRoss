def APS2Socket():
  modbus_add_signal("10.103.16.140", 255, 0, 2, "prod_na_cx", True)
  modbus_set_signal_update_frequency("prod_na_cx", 10)
  modbus_add_signal("10.103.16.140", 255, 1, 2, "n_insp", True)
  modbus_set_signal_update_frequency("n_insp", 10)
  modbus_add_signal("10.103.16.140", 255, 0, 3, "prod_encaixota", True)
  modbus_set_signal_update_frequency("prod_encaixota", 10)
  modbus_set_runstate_dependent_choice("prod_encaixota",0)
  set_tool_voltage(24)
  step_count_4d91c83a_7f00_4ab1_9b16_dbece316eb4f = 0.0
  thread Step_Counter_Thread_a2c4e047_87e2_4fa3_b023_dc8122a04dd3():
    while (True):
      step_count_4d91c83a_7f00_4ab1_9b16_dbece316eb4f = step_count_4d91c83a_7f00_4ab1_9b16_dbece316eb4f + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_a2c4e047_87e2_4fa3_b023_dc8122a04dd3()
  set_gravity([0.0, 0.0, 9.82])
  set_safety_mode_transition_hardness(0)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 0)
  set_tool_analog_input_domain(1, 0)
  set_analog_outputdomain(0, 1)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tcp(p[0.0,0.0,0.18,0.0,3.14,0.0])
  set_payload(0.71, [2.6000000000000003E-4, 0.00206, 0.0423])
  global plane=[0, 0, 0, 0, 0, 0]
  global free=1
  global Gaveteiro_plane=p[-0.18391406007170819,-0.6890912013208738,-0.3091053148893457,-3.136624244641354,-0.07450754164245207,-0.012062489851684073]
  global Plane_var=p[0.0455072287759728,0.5532633607914713,-0.12009520789912541,0.02088120484419274,0.010016746118093,-0.02458726325044075]
  global PlanoArAula9=p[0.7942382577522773,-0.05274490106868765,0.28953087333027294,-1.2101977474418126,-1.2112243285351472,1.2072853144995164]
  global PlanoMesaAula9=p[0.4316603038800538,-0.4176154966413232,-0.22708615915239258,0.0011409468517281232,-0.0021558803218785405,-3.3834622272085614E-4]
  global Plano_mesa_gio=p[0.5722610509435332,-0.40820095277647794,-0.22787514661355984,0.004980319709535583,-0.010045557410892312,0.003475544605146006]
  global xadrez=p[0.07245008429201542,0.7162309814300137,-0.2492325678677777,0.021240702277102536,0.009909632298596038,-2.9870755951116497]
  global xadrez2=p[-0.24762135118614845,0.3378039779312413,-0.2536888643835707,0.03547999981100722,-0.008259935265332035,0.09585250855875074]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  $ 1 "BeforeStart"
  $ 2 "SocketIP≔socket_open('10.103.16.140',30000)"
  global SocketIP=socket_open("10.103.16.140",30000)
  $ 3 "MoveJ"
  $ 4 "Waypoint_1" "breakAfter"
  movej(get_inverse_kin(p[.063867230518, -.618041381769, .296077511224, .039106344223, -.003027532309, .119367438930], qnear=[1.4967727661132812, -1.2317803541766565, 1.0446538925170898, -1.3440426031695765, -1.5609105269061487, -0.19412309328188115]), a=1.3962634015954636, v=1.0471975511965976)
  while (True):
    $ 5 "Robot Program"
    $ 6 "Loop SocketIP≟ False "
    while (SocketIP ==   False  ):
      $ 7 "SocketIP≔socket_open('10.103.16.140',30000)"
      global SocketIP=socket_open("10.103.16.140",30000)
      $ 8 "Wait: 0.5"
      sleep(0.5)
    end
    $ 9 "socket_send_string('asking_for_data')"
    socket_send_string("asking_for_data")
    $ 10 "Wait: 0.5"
    sleep(0.5)
    $ 11 "read_ascii≔socket_read_ascii_float(3)"
    global read_ascii=socket_read_ascii_float(3)
    $ 12 "Wait: 0.5"
    sleep(0.5)
    $ 13 "SocketIP≔ False "
    global SocketIP=  False  
    $ 14 "socket_close()"
    socket_close()
    $ 15 "If read_ascii[0]≠0"
    if (read_ascii[0] != 0):
      $ 16 "pose_desejada≔p[read_ascii[1]/1000,read_ascii[2]/1000,0,0,0,d2r(90)]"
      global pose_desejada=p[read_ascii[1]/1000,read_ascii[2]/1000,0,0,0,d2r(90)]
      $ 17 "pose_atual≔get_actual_tcp_pose()"
      global pose_atual=get_actual_tcp_pose()
      $ 18 "trans_pose≔pose_trans(pose_atual,pose_desejada)"
      global trans_pose=pose_trans(pose_atual,pose_desejada)
      $ 19 "MoveL"
      $ 20 "trans_pose" "breakAfter"
      movel(pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], trans_pose), a=1.2, v=0.25)
      $ 21 "Wait: 0.5"
      sleep(0.5)
      $ 22 "Waypoint_1" "breakAfter"
      movel(p[.063867230518, -.618041381769, .296077511224, .039106344223, -.003027532309, .119367438930], a=1.2, v=0.25)
    end
  end
end
