 Program
   BeforeStart
     'Open Socket that checks if a color is done'
     Socket_color≔socket_open("10.103.16.221",30001,socket_name="color")
     'Open Socket that recieve the (X,Y,Z) coordinates data'
     Socket_coord≔socket_open("10.103.16.221",30002,socket_name="coord")
     PosicaoRecarga≔1
     var_1≔0
     Call Recharge_color
   Robot Program
     Loop Socket_color ≟  False 
       Socket_color≔socket_open("10.103.16.221",30001,socket_name="color")
     Socket_color≔socket_send_string("color_done", socket_name = "color")
     var_1≔var_1+1
     Loop Socket_coord ≟ False 
       Socket_coord≔socket_open("10.103.16.221",30002,socket_name="coord")
     Loop Socket_coord ≟ True 
       'Socket_color≔socket_send_string("color_not_done", socket_name = "color")'
       Num_points≔socket_read_ascii_float(1,socket_name="coord")
       N≔Num_points[1]
       X≔socket_read_ascii_float(N,socket_name="coord")
       Y≔socket_read_ascii_float(N,socket_name="coord")
       Z≔socket_read_ascii_float(N,socket_name="coord")
       'Socket_coord≔socket_close()'
       'socket_close(socket_name = "Socket_coord")'
       count≔1
       If Recarga ≟ False 
         Loop count≤N
           move2pose≔p[X[count]/1000,Y[count]/1000,Z[count]/1000,0,0,0]
           MoveL
             move2pose
           'Wait: 0.5'
           count≔count+1
       If Recarga ≟  True 
         Call Recharge_color
     'Socket_coord≔socket_close()'
     'socket_close()'
   Thread_1
     If Recarga≟ False 
       Wait: 60.0
       Recarga≔ True 
   Recharge_color
     posicao_tinta≔p[15*PosicaoRecarga/1000,(PosicaoRecarga+7)/7*15/1000,0,0,0,0]
     MoveL
       posicao_tinta
     Wait: 2.0
     Recarga≔ False 
   'Thread_2'
